% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/debugView.R
\name{debug.view}
\alias{debug.view}
\title{Viewing Files and Variables}
\usage{
debug.view(..., start.line = NA, script.num = 1)
}
\arguments{
\item{...}{The variable names or file names to be queried.}

\item{start.line}{The line number of the queried variables or files. Optional.}

\item{script.num}{The script number of the queried variables or files.
Defaults to 1.}
}
\description{
debug.view displays the contents of each file or variable queried.
For snapshots or files with the file extension of .csv or .txt, the data
will be loaded into the debugger environment before it is viewed. Otherwise,
the data will be viewed using the system's default program for that type of file.
Additionally, a data frame showing what the function has opened will be returned,
which contains the following columns:
\itemize{
 	\item name: The name of the variable or file being viewed.
 	\item startLine: The line number the variable or file is associated with. 
 	\item scriptNum: The script number the variable or file is associated with.
 	\itme title: The title of the variable or file when viewed.
 	\item notes: Will display PARTIAL if the variable is a partial snapshot, or
 	             indicate that the provenance directory or a file is not found.
 	             NA otherwise.
}
}
\details{
debug.variable belongs to provDebugR, a debugger which utilises provenance 
collected post-execution to facilitate understanding of the execution and aid 
in debugging.

This function may be used only after the debugger has been initialised using
one its initialisation functions (listed below).
}
\examples{
\dontrun{
prov.debug.run("test.R")
debug.view("x")
debug.view("x", "y", start.line = 5, script.num = 2)
}

}
\seealso{
provDebugR Initialisation Functions:

\code{\link{prov.debug}}

\code{\link{prov.debug.file}}

\code{\link{prov.debug.run}}

Other provDebugR Functions (non-initialisation):

\code{\link{debug.error}}: Returns the backwards lineage of the error, if any.
             The error may be queried on StackOverflow.

\code{\link{debug.line}}: Returns all immediate inputs and outputs
             for the line(s) queried.

\code{\link{debug.lineage}}: Returns the forwards or backwards lineage
             of the data object(s) queried. The forwards lineage shows how the
             data object was used, and the backwards lineage shows how it was produced.

\code{\link{debug.state}}: Returns the state at the line(s) queried,
             after the line had been executed. The state is the list of all 
             variables and their values in the environment at the queried line.

\code{\link{debug.type.changes}}: Returns a data frame for each variable in
             the execution containing the instances where the data type changed.

\code{\link{debug.variable}}: Returns a data frame showing all instances
             of the variable(s) queried.

\code{\link{debug.warning}}: Returns the backwards lineage of the queried
             warning(s), if any.
}
