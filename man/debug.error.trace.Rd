% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/debugIssues.R
\name{debug.error.trace}
\alias{debug.error.trace}
\alias{debug.warning.trace}
\title{Warnings and errors}
\usage{
debug.error.trace(stack.overflow = F)

debug.warning.trace(..., stack.overflow = F)
}
\arguments{
\item{stack.overflow}{Determines whether or not the
error message should be searched for automatically on stack overflow}

\item{...}{A number representing the error message the function should return.
To see the possibilities call the function with no argument passed}
}
\value{
Debug.error: Returns a data frame with all the lines that led to an error's creation

Debug.warning: Returns one of two things. If no parameters were passed to the function
then a list of possible warnings will be returned. The number next to the warning
is the number that should be passed to grab that lineage. If variables were passed to the
function then a list of data frames is returned. Each data frame corresponds to one
of the warnings.
}
\description{
This function will trace the lineage of an error message, returning the lines
that led up to a script stopping

This function shows the lineage of the warning messages in a script
}
\examples{
\dontrun{
debug.init("example.R")
debug.error.trace()
debug.error.trace(stack.overflow = T) # Not currently supported
}
\dontrun{
debug.init("example.R")
debug.warning.trace() # returns a list of possible warnings
debug.warning.trace(1, 4) # returns warnings 1 and 4
debug.warning.trace(1:4, 7) # returns warnings 1 through 4 and 7
}
}
